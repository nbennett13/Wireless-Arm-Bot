
#pragma config(Sensor, in1,    ,               sensorAnalog)
#pragma config(Sensor, dgtl1,  baseencoder,    sensorQuadEncoder)
#pragma config(Sensor, dgtl3,  armencoder,     sensorQuadEncoder)
#pragma config(Sensor, dgtl12, btn,            sensorTouch)
#pragma config(Motor,  port2,           base,          tmotorVex393_MC29, openLoop, encoderPort, None)
#pragma config(Motor,  port3,           arm,           tmotorVex393_MC29, openLoop, encoderPort, None)
#pragma config(Motor,  port4,           claw,          tmotorVex393_MC29, openLoop)
#pragma config(Motor,  port5,           arm2,          tmotorVex393_MC29, openLoop)
//*!!Code automatically generated by 'ROBOTC' configuration wizard               !!*//




/////////////////////////////////// MAIN TASK//////////////////////

task main()
{
while(1==1)
{
	 ////////////////////////
	//////////Claw//////////
	///////////////////////
	if(vexRT[Btn6U]==1) //top button 6 is pressed open claw
	{
		Motor(claw)=63;
	}
	else if(vexRT[Btn6D]==1) //bottom button 6 is pressed close claw
	{
		motor(claw)=-63;
	}
	else
	{
		motor(claw)=0; //keeps motor at last position
	}

	///////////////////////
	//////Base////////////
	/////////////////////
motor[base] = vexRT[Ch1]/4; //mannuel control

if(vexRT[Btn7U] == 1)//go to forward position
{
	while(SensorValue(baseencoder)<insert actual number later)//while encoder value less than value, move motor positive
		{
			motor(base)=31.75;
		}

	while(SensorValue(baseencoder)>insert number)//while encoder value greater than value, move motor negative
		{
			motor(base)=-31.75;
		}
	if(SensorValue(baseencoder)=actual number)//if encoder value is equal to value, stop motor
		{
			motor(base)=0;
			wait(10);
			SensorValue(baseenecoder)=0;//resets encoder
		}
}
 
if(vexRT[Btn7R] == 1)//go to right position
{
	while(SensorValue(baseencoder)<insert actual number later)//while encoder value less than value, move motor positive
		{
			motor(base)=31.75;
		}

	if(SensorValue(baseencoder)=actual number)//if encoder value is equal to value, stop motor
		{
			motor(base)=0;
			wait(10);
			SensorValue(baseenecoder)=0;//resets encoder
		}
}

if(vexRT[Btn7L] == 1)//go to left position
{
	while(SensorValue(baseencoder)>insert actual number later)//while encoder value less than value, move motor negative
		{
			motor(base)=-31.75;
		}

	if(SensorValue(baseencoder)=actual number)//if encoder value is equal to value, stop motor
		{
			motor(base)=0;
			wait(10);
			SensorValue(baseenecoder)=0;//resets encoder
		}
}
 


		////////////////////////////
		////////Arm////////////////
		//////////////////////////


if(vexRT[Btn5U] == 1)
	{
		motor[arm] = -100;
	}
else if(vexRT[Btn5D] == 1)
	{
		motor[arm] = 100;
	}
else
	{
		motor[arm]=0;
	}

}
}
