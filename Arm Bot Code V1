#pragma config(Sensor, in1,    ,               sensorAnalog)
#pragma config(Sensor, dgtl1,  baseencoder,    sensorQuadEncoder)
#pragma config(Sensor, dgtl3,  armencoder,     sensorQuadEncoder)
#pragma config(Sensor, dgtl12, btn,            sensorTouch)
#pragma config(Motor,  port2,           base,          tmotorVex393_MC29, openLoop, encoderPort, None)
#pragma config(Motor,  port3,           arm,           tmotorVex393_MC29, openLoop, encoderPort, None)
#pragma config(Motor,  port4,           claw,          tmotorVex393_MC29, openLoop)
#pragma config(Motor,  port5,           arm2,          tmotorVex393_MC29, openLoop)
//*!!Code automatically generated by 'ROBOTC' configuration wizard               !!*//


// These could be constants but leaving
// as variables allows them to be modified in the debugger "live"
static float  pid_Kp = 0.3;
static float  pidRequestedValue;

/*-----------------------------------------------------------------------------*/
/*  pid control task                                                           */
/*-----------------------------------------------------------------------------*/

task pidController()
{
    float  pidSensorCurrentValue;
    float  pidError;
    float  pidDrive;

    while( true )
        {
        // Read the sensor value and scale
        pidSensorCurrentValue = SensorValue[ baseencoder ];

        // calculate error
        pidError =  pidRequestedValue - pidSensorCurrentValue;

        // calculate drive
        pidDrive = (pid_Kp * pidError);

        // limit drive
        if( pidDrive > 33 )
            pidDrive = 33;
        if( pidDrive < (-33) )
            pidDrive = (-33);

        // send to motor
        motor[ base ] = pidDrive;

        // Don't hog cpu
        wait1Msec( 25 );
        }
}

/////////////////////////////////// MAIN TASK//////////////

task main()
{
wait10Msec(1);
while(1==1)
{
if(vexRT[Btn6U]==1)
{
	Motor(claw)=63;
}
else if(vexRT[Btn6D]==1)
{
		motor(claw)=-63;
}
else
{
motor(claw)=0;
}


//motor(arm)=vexRT[Btn3];

 // set initial position as the value of the pot
    pidRequestedValue = SensorValue[ baseencoder ];

    // start the PID task
    StartTask( pidController );

    // use joystick to modify the requested position
    while( true )
        {
        // presets - assume joystick is centered
        if( vexRT[ Btn7U ] == 1 )
            pidRequestedValue = 35;
        else
        if( vexRT[ Btn7R ] == 1 )
            pidRequestedValue = 130;
	else
	if( vexRT[Btn7L] == 1)
		pidRequestedValue = -50
}
}
